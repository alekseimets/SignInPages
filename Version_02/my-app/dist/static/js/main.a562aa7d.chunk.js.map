{"version":3,"sources":["Components/layout/SignedInLinks.js","store/action/authActions.js","Components/layout/SignedOutLinks.js","Components/layout/Navbar.js","Components/dashboard/Notifications.js","Components/projects/ProjectSummary.js","Components/projects/ProjectList.js","Components/dashboard/Dashboard.js","Components/projects/ProjectDetails.js","Components/auth/SignIn.js","Components/auth/SignUp.js","Components/projects/CreateProject.js","store/action/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","href","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","toString","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","AuthIsLoaded","children","useSelector","isLoaded","rffProps","useFirestoreForProfile","config","userProfile","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.a562aa7d.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../store/action/authActions\";\n\nconst SignedInLinks = (props) => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/create\">New Project</NavLink>\n      </li>\n      <li>\n        <a href=\" \" onClick={props.signOut}>Log Out</a>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n          {props.profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut()),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n","export const signIn = (credentials) => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: \"LOGIN_SUCCESS\" });\n      })\n      .catch((err) => {\n        dispatch({ type: \"LOGIN_ERROR\", err });\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\n      });\n  };\n};\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then((resp) => {\n        return firestore\n          .collection(\"users\")\n          .doc(resp.user.uid)\n          .set({\n            firstName: newUser.firstName,\n            lastName: newUser.lastName,\n            initials: newUser.firstName[0] + newUser.lastName[0],\n          });\n      })\n      .then(() => {\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\n      })\n      .catch((err) => {\n        dispatch({ type: \"SIGNUP_ERROR\", err });\n      });\n  };\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signup\">Signup</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\">Login</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport { connect } from \"react-redux\";\n\nconst Navbar = (props) => {\n  const { auth, profile } = props;\n  //console.log(auth);\n  const links = auth.uid ? (\n    <SignedInLinks profile={profile} />\n  ) : (\n    <SignedOutLinks />\n  );\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">\n          AlekseiPlan\n        </Link>\n        {links}\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile,\n  };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst Notifications = (props) => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"online-users\">\n            {notifications &&\n              notifications.map((item) => {\n                return (\n                  <li key={item.id}>\n                    <span className=\"pink-text\">{item.user} </span>\n                    <span>{item.content}</span>\n                    <div className=\"note-date grey-text\">\n                      {moment(item.time.toDate()).fromNow()}\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React from \"react\";\nimport moment from 'moment'\n\nconst ProjectSummary = ({project}) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-4\">\n        <span className=\"card-title\">{project.title}</span>\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n        <p className=\"grey-text\">{moment(project.createdAt.toDate().toString()).calendar()}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default ProjectSummary;\n","import React from \"react\";\nimport ProjectSummary from \"./ProjectSummary\";\nimport {Link} from 'react-router-dom';\n\nconst ProjectList = ({projects}) => {\n  return (\n    <div className=\"project-list section\">\n      { projects && projects.map(project => {\n        return (\n          <Link to={\"/project/\" + project.id} key={project.id}>\n            <ProjectSummary project={project}/>\n          </Link>\n        )\n      })}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React, { Component } from \"react\";\nimport Notifications from \"./Notifications\";\nimport ProjectList from \"../projects/ProjectList\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Dashboard extends Component {\n  render() {\n    //console.log(this.props);\n    const { projects, auth, notifications } = this.props;\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n          <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"projects\", orderBy: ['createdAt', 'desc']},\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n  ])\n)(Dashboard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\n  const { project, auth } = props;\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\n\n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>\n              Posted by {project.authorFirstName} {project.authorLastName}\n            </div>\n            <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project ...</p>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(state);\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"projects\" }])\n)(ProjectDetails);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../store/action/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  };\n\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />;\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"red-text center\">\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n  };\n};\n\nconst mapDisaptchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDisaptchToProps)(SignIn);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { signUp } from '../../store/action/authActions'\n\nclass SignUp extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  };\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />;\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            <div className=\"red-text center\">\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError,\n  };\n};\n\nconst mapsDispatchToProps = (dispatch) => {\n  return {\n    signUp: (newUser) => dispatch(signUp(newUser)),\n  };\n};\n\nexport default connect(mapStateToProps, mapsDispatchToProps)(SignUp);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../store/action/projectActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass CreateProject extends Component {\n  state = {\n    title: \"\",\n    content: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    //console.log(this.state);\n    this.props.createProject(this.state);\n    this.props.history.push('/');\n  };\n\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Ceate New Project</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Project Content</label>\n            <textarea\n              id=\"content\"\n              className=\"materialize-textarea\"\n              onChange={this.handleChange}\n            ></textarea>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createProject: (project) => dispatch(createProject(project)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","export const createProject = (project) => {\n  return (dispatch, getState, { getFirestore }) => {\n    // make async call to database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore\n      .collection(\"projects\")\n      .add({\n        ...project,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId: authorId,\n        createdAt: new Date(),\n      })\n      .then(() => {\n        dispatch({ type: \"CREATE_PROJECT_SUCCESS\" });\n      })\n      .catch((err) => {\n        dispatch({ type: \"CREATE_PROJECT_ERROR\" }, err);\n      });\n  };\n};\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './Components/layout/Navbar'\nimport Dashboard from './Components/dashboard/Dashboard'\nimport ProjectDetails from './Components/projects/ProjectDetails'\nimport SignIn from './Components/auth/SignIn';\nimport SignUp from './Components/auth/SignUp';\nimport CreateProject from './Components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/'component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n  authError: null,\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGIN_ERROR\":\n      console.log(\"login error\");\n      return {\n        ...state,\n        authError: \"Login failed\",\n      };\n    case \"LOGIN_SUCCESS\":\n      console.log(\"login success\");\n      return {\n        ...state,\n        authError: null,\n      };\n    case \"SIGNOUT_SUCCESS\":\n      console.log(\"signout sucess\");\n      return state;\n    case \"SINUP_SUCCESS\":\n      console.log(\"signup success\");\n      return {\n        ...state,\n        authError: null,\n      };\n    case \"SIGNUP_ERROR\":\n      console.log(\"signup error\");\n      return {\n        ...state,\n        authError: action.err.message,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initState = {\n  projects: [\n    { id: \"1\", title: \"help me find peach\", content: \"blah blah blah\" },\n    { id: \"2\", title: \"collect all the stars\", content: \"blah blah blah\" },\n    { id: \"3\", title: \"egg hunt with yoshi\", content: \"blah blah blah\" },\n  ],\n};\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"CREATE_PROJECT_SUCCESS\":\n      console.log(\"create project success\");\n      return state;\n    case \"CREATE_PROJECT_ERROR\":\n      console.log(\"create project error\");\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;\n","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport {firestoreReducer} from 'redux-firestore'\nimport {firebaseReducer} from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Your web app's Firebase configuration\nvar config = {\n  apiKey: \"AIzaSyAGVEX52bWHKWbRx5ZZrZ87CU5cjSCvx3s\",\n  authDomain: \"signinpages-37998.firebaseapp.com\",\n  databaseURL: \"https://signinpages-37998.firebaseio.com\",\n  projectId: \"signinpages-37998\",\n  storageBucket: \"signinpages-37998.appspot.com\",\n  messagingSenderId: \"52874718518\",\n};\nfirebase.initializeApp(config);\nfirebase.firestore().settings({});\n\nexport default firebase;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport firebase from \"./config/fbConfig\";\nimport {\n  createFirestoreInstance,\n  reduxFirestore,\n  getFirestore,\n} from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport { useSelector } from \"react-redux\";\nimport { isLoaded } from \"react-redux-firebase\";\n\nimport \"firebase/firestore\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase)\n  )\n);\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector((state) => state.firebase.auth);\n  if (!isLoaded(auth)) return <div>splash screen...</div>;\n  return children;\n}\n\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true,\n};\n\nconst rffProps = {\n  firebase,\n  useFirestoreForProfile: true,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rffProps}>\n      <AuthIsLoaded>\n        <App />{\" \"}\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}